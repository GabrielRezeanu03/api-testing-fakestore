{
	"info": {
		"_postman_id": "d5061bac-de2d-46cf-9e42-fddff0fa2ddf",
		"name": "FakeStore API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20216382"
	},
	"item": [
		{
			"name": "FS_TC1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Body is an array\", () => {\r",
							"  const body = pm.response.json();\r",
							"  pm.expect(body).to.be.an(\"array\");\r",
							"  pm.expect(body.length).to.be.above(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_TC2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"ID este 1 şi are preţ numeric\", () => {\r",
							"  const item = pm.response.json();\r",
							"  pm.expect(item.id).to.eql(1);\r",
							"  pm.expect(item.price).to.be.a(\"number\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/products/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_TC3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200 (non‑existent ID returns OK)\", () =>\r",
							"  pm.response.to.have.status(200)\r",
							");\r",
							"\r",
							"pm.test(\"Response body is empty for non‑existent product\", () => {\r",
							"  const text = pm.response.text().trim();\r",
							"  pm.expect(text).to.be.oneOf([\"\", \"{}\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/products/9999",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"9999"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_TC4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Response contains a valid token\", () => {\r",
							"  const json = pm.response.json();\r",
							"  pm.expect(json).to.have.property(\"token\");\r",
							"  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.above(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\":\"mor_2314\",\r\n  \"password\":\"83r5^_\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_TC5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Response is an array of carts for user 2\", () => {\r",
							"  const carts = pm.response.json();\r",
							"  pm.expect(carts).to.be.an(\"array\");\r",
							"  if (carts.length > 0) {\r",
							"    pm.expect(carts[0]).to.have.property(\"userId\", 2);\r",
							"  }\r",
							"});\r",
							"var template = `\r",
							"<style type=\"text/css\">\r",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
							"    .tftable tr {background-color:#ffffff;}\r",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
							"    .tftable tr:hover {background-color:#e0ffff;}\r",
							"</style>\r",
							"\r",
							"<table class=\"tftable\" border=\"1\">\r",
							"    <tr>\r",
							"        <th>ID</th>\r",
							"        <th>User ID</th>\r",
							"        <th>Date</th>\r",
							"        <th>Products</th>\r",
							"    </tr>\r",
							"    \r",
							"    {{#each response}}\r",
							"        <tr id=row_{{@key}}>\r",
							"            <td>{{id}}</td>\r",
							"            <td>{{userId}}</td>\r",
							"            <td>{{date}}</td>\r",
							"            <td>\r",
							"                <table>\r",
							"                    <tr>\r",
							"                        <th>Product ID</th>\r",
							"                        <th>Quantity</th>\r",
							"                    </tr>\r",
							"                    {{#each products}}\r",
							"                        <tr>\r",
							"                            <td>{{productId}}</td>\r",
							"                            <td>{{quantity}}</td>\r",
							"                        </tr>\r",
							"                    {{/each}}\r",
							"                </table>\r",
							"            </td>\r",
							"        </tr>\r",
							"    {{/each}}\r",
							"</table>\r",
							"`;\r",
							"\r",
							"function constructVisualizerPayload() {\r",
							"    return {response: pm.response.json()}\r",
							"}\r",
							"\r",
							"pm.visualizer.set(template, constructVisualizerPayload());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/carts/user/2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"carts",
						"user",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_TC6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Created cart has numeric id\", () => {\r",
							"  const cart = pm.response.json();\r",
							"  pm.expect(cart).to.have.property(\"id\").that.is.a(\"number\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userId\": 5,\r\n  \"date\": \"2020-02-03\",\r\n  \"products\": [\r\n    { \"productId\": 1, \"quantity\": 2 }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/carts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"carts"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_TC7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Products array is updated\", () => {\r",
							"  const cart = pm.response.json();\r",
							"  pm.expect(cart).to.have.property(\"products\").that.is.an(\"array\");\r",
							"  pm.expect(cart.products[0]).to.have.property(\"productId\", 3);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userId\": 5,\r\n  \"date\": \"2020-02-03\",\r\n  \"products\": [\r\n    { \"productId\": 3, \"quantity\": 1 }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/carts/7",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"carts",
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_TC8",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200 or 204\", () => {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/carts/7",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"carts",
						"7"
					]
				}
			},
			"response": []
		}
	]
}